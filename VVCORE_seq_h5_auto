#!/Users/temporary/anaconda3/envs/VVCORE_dynasor/bin/python
import numpy as np
import time
import argparse

# Custom dependences
from VVCORElib_seq_h5 import save_signal
from VVCORElib_seq_h5 import compute_auto


def parser():
    """Parser of the arguments"""
    parser = argparse.ArgumentParser(description='VVCORE - autocorrelation function tool')
    parser.add_argument('-path', type=str, default='./', help='Path to the folder with trajectory')
    parser.add_argument('-opt', type=str, default='dens cur_T cur_L', help='Program option')
    parser.add_argument('-N_frames', type=int, default=10000, help='Number of frames readed in one chunk')
    parser.add_argument('-N_auto', type=int, default=1000, help='Number of frames to autocorrelate')

    parser.add_argument('-Nq', type=int, default=50, help='Number of q points to resolve (for cubic lattices)')
    args = parser.parse_args()
    return args

if __name__ == "__main__":
    
    start_time_program = time.time()
    
    args = parser()

    path = args.path
    opts = args.opt.split()

    N = args.N_frames
    N_auto = args.N_auto
    
    Nq = args.Nq
    
    ############## Compute auto part ###############################################
    start_time_auto = time.time()

    res = compute_auto(path, N, Nq, N_auto, opts)

    time_auto =time.time() - start_time_auto

    ############## Save auto ######################################
    start_time_comm_2 = time.time()

    for opt in opts:
        save_signal(res[opt], f"{path}/auto_{opt}.h5")
        res.pop(opt)

    time_comm_2 = time.time() - start_time_comm_2
    time_program = time.time() - start_time_program
